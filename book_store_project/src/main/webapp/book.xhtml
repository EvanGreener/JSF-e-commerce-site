<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<!--
Book page that displays information for a single book, 
allows logged in user to create reviews if they have not already, 
allows all users to view reviews that have been approved by manager,
suggests books with similar authors and/or genre,
saves the genre in a cookie for suggestions in homepage

compatible with different screen sizes

@author Shruti Pareek
-->
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:bookstore="http://java.sun.com/jsf/composite/default_components"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:f="http://xmlns.jcp.org/jsf/core">
    <h:head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

        <!--Show current book title in the tab's title-->
        <ui:repeat value="#{bb.book}" var="book">
            <title>#{book.title}</title>
        </ui:repeat>

        <link rel="stylesheet" href="https://unpkg.com/swiper/css/swiper.min.css"/>
        <link href="https://fonts.googleapis.com/css?family=Montserrat|Roboto&amp;display=swap" rel="stylesheet"/>
        <h:outputStylesheet library="webjars" name="Semantic-UI/2.4.1/semantic.min.css" />
        <h:outputStylesheet library="css" name="default.css" />
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
        <h:outputScript library="js" name="homepage.js" />
        <h:outputScript library="js" name="book.js" />
        <h:outputScript library="webjars" name="Semantic-UI/2.4.1/semantic.min.js"/>
        <h:outputStylesheet library="bookCss" name="book.css" />

        <script  src="https://www.gstatic.com/charts/loader.js"></script>
        <script src="https://unpkg.com/swiper/js/swiper.min.js"></script>

    </h:head>
    <h:body>
        <!--composite component that comes from the navbar.xhtml file to avoid coding nav bar in all web pages-->
        <bookstore:navbar/>

        <!-- The Modal for view book cover -->
        <!-- source https://semantic-ui.com/modules/modal.html-->
        <div class="ui modals transition visible" id="myModal" style="display: none !important;z-index:3;" >
            <div class="ui standard tiny modal transition visible scrolling" style="display: block !important;">
                <span class="close">x</span>
                <div class="image content" style="justify-content: center;">
                    <div class="ui medium image">
                        <h:graphicImage class="image" id="img01" height="650px" width="520px" library="images" name="9780062200570.jpg"  />
                    </div>
                </div>
            </div>
        </div>




        <!--Book description section-->
        <div class="lightGreyDiv">
            <div class="ui stackable two cards" style="background: #fff;box-shadow: 0 1px 3px 0 #d4d4d5,0 0 0 1px #d4d4d5 !important;border-radius: .28571429rem !important;">
                <div class="ui fluid card" style="padding:40px;width:60%;box-shadow: 0 1px 3px 0 #fff,0 0 0 1px #fff !important;">
                    <div class="content ">
                        <!--Shows book's information-->
                        <ui:repeat value="#{bb.book}" var="book">

                            <!--Book title-->
                            <p class="textColor" style="font-size: 40px;line-height:0.8em;letter-spacing: 0em;font-weight: 100;">#{book.title}</p>
                            <p class="textColor" style="font-size: 40px;line-height:0.8em;letter-spacing: 0em;font-weight: 100;">#{book.numOfPages} pages</p>
                            <div class="bookTextInfo">

                                <!--Book author or authors-->
                                <p style="font-size: 23px;line-height: 1.3em;letter-spacing: 0.017em;font-weight: 500;font-style: italic;">- <ui:repeat value="#{book.authorsCollection}" var="author">
                                        #{author.name}
                                    </ui:repeat>
                                </p>

                                <!--Book Format info-->
                                <p class="bookFormat">#{book.bookFormat.format}</p>
                                <br/>

                                <!--Show average rating stars and use that to subtract out of five to get remaining empty stars-->
                                <ui:repeat value="#{reviewBean.getRating(reviewBean.getAverageRating(book.isbn))}" var="avgRating">
                                    <h:graphicImage class="image" height="20px" width="20px" library="images" name="ratestar.png"  />
                                </ui:repeat>
                                <ui:repeat value="#{reviewBean.getRating(5-reviewBean.getAverageRating(book.isbn))}" var="avgRating">
                                    <h:graphicImage class="image" height="20px" width="20px" library="images" name="star.png"  />
                                </ui:repeat>

                                <!--Review count info-->
                                <p> #{reviewBean.getReviewCount(book.isbn)} 
                                    <!--Choose plural or singular form depending on how many reviews there are-->
                                    <c:choose>
                                        <c:when test="${reviewBean.getReviewCount(book.isbn)eq 1}">
                                            review
                                        </c:when>
                                        <c:otherwise>
                                            reviews
                                        </c:otherwise>
                                    </c:choose>
                                </p>

                                <!--Genre info-->
                                <br/>
                                <p class="thicker"> Genre: #{book.genre}</p>

                                <!--Save the genre in a cookie-->
                                #{cbb.saveLastGenre(book)}
                                <br/>

                                <!--Book description-->
                                #{bb.getDisplayBookDescription(book.description)}<h:panelGroup rendered="#{! bb.getDisplayBookDescription(book.description).equals(book.description)}"><span id="dots">...</span><span id="more">#{bb.getHiddenBookDescription(book.description)}</span>
                                    <a  onclick="showMore()" id="moreBtn">Read more</a>
                                </h:panelGroup>


                                <!--list price displayed if sale price equal list price-->
                                <h:panelGroup rendered="#{bb.book.listPrice.compareTo(bb.book.salePrice)== 0}">
                                    <h2>$#{bb.book.listPrice}</h2>
                                </h:panelGroup>
                                <!--sale price displayed if sale price  not equal list price-->
                                <h:panelGroup rendered="#{bb.book.listPrice.compareTo(bb.book.salePrice)!= 0}">
                                    <h2 class="oldPrice">$#{bb.book.listPrice}</h2>
                                    <h2 class="salePrice">$#{bb.book.salePrice}</h2>
                                </h:panelGroup>




                                <br/>
                                <h:form>
                                    <!--Button to add to shopping cart-->
                                    <h:commandButton action="#{cbb.addBookToCart(bb.book)}" value = "Add to Cart" class="addToCartBtn button">
                                        <f:ajax event="click" ></f:ajax>
                                    </h:commandButton>
                                </h:form>
                            </div>
                        </ui:repeat>
                    </div>
                </div>

                <!--Book Image-->
                <div class="ui fluid card" style="padding:40px;width:30.5%;box-shadow: 0 1px 3px 0 #fff,0 0 0 1px #fff !important;">
                    <div class="image">
                        <h:graphicImage class="image" height="400px" width="300px" library="images" name="#{bb.book.isbn}.jpg"  />
                    </div>
                </div>
            </div>
        </div>

        <!--Reviews section-->
        <div class="lightPurpleDiv">
            <table class="ui padded table">
                <tr>
                    <td  style="vertical-align: middle; text-align: center">
                        <p style="font-size: 1.7em">Reviews</p>
                    </td>
                    <td  colspan="5" class="right aligned single line">  
                        <h:panelGroup id="reviewSection">

                            <!-- Only show the add review button if user is logged in and they have not written a review for the current book they are viewing-->
                            <c:if test="#{UserLoginBean.getIfSignedIn() and reviewBean.getUserWrittenReviews(UserLoginBean.getClient().clientID,bb.book.isbn) eq 0}">
                                <h:commandButton id="reviewBtn" class="button addReviewBtn" value="+" type="button" />
                            </c:if>
                        </h:panelGroup>
                    </td>

                </tr>

                <h:form>
                    <tbody>
                        <tr><td>
                                <!--Review are all displayed here and scroll through them-->
                                <h:panelGroup id="reviewDisplay" class="flex-review scrollReviews">
                                    <ui:repeat value="#{reviewBean.getReviews(bb.book.isbn)}"  var="review">
                                        <div>
                                            <!-- review Title-->
                                            <p class="reviewTitle">#{review.reviewTitle}</p>
                                            <!-- author of review-->
                                            <p class="reviewName">#{clientsJpaController.findClients(review.clientID).firstName} #{clientsJpaController.findClients(review.clientID).lastName} </p>

                                            <!-- review body-->
                                            <p>#{review.reviewBody} </p>
                                            <div class="flex-review" style="padding:0px">
                                                <div style="padding:0px">
                                                    <ui:repeat value="#{reviewBean.getRating(review.rating)}" var="rate">
                                                        <h:graphicImage class="image" height="20px" width="20px" library="images" name="ratestar.png"  />
                                                    </ui:repeat>
                                                    <ui:repeat value="#{reviewBean.getRating(5-review.rating)}" var="rate">
                                                        <h:graphicImage class="image" height="20px" width="20px" library="images" name="star.png"  />
                                                    </ui:repeat>
                                                </div>
                                                <!-- converting sql date to normal human readable format-->
                                                <div style="padding:0px" class="reviewDate">
                                                    <h:outputText value="#{review.dateEntered}">
                                                        <f:convertDateTime type="date" dateStyle="medium"/>
                                                    </h:outputText>
                                                </div>
                                            </div>
                                            <hr style="border-top-color:grey"/>
                                        </div>

                                    </ui:repeat>
                                </h:panelGroup>

                                <!--Display no reviews if there are none-->
                                <h:panelGroup rendered="#{reviewBean.getReviewCount(bb.book.isbn) ==0}">
                                    <h4> No Reviews yet.</h4>
                                </h:panelGroup>
                            </td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>  
                        </tr>
                    </tfoot>
                </h:form>
            </table>
        </div>


        <!-- The Modal for creating a review-->
        <!-- source https://semantic-ui.com/modules/modal.html-->
        <div class="ui modals transition visible" style="display: none !important;z-index:3;" >
            <div class="ui standard small modal transition visible scrolling" style="display: block !important;">

                <!-- close button to close modal or user can click outside modal to close-->
                <span class="close">x</span>
                <div class="content" style="justify-content: center;">

                    <!-- Form uses ajax to display errors or warnings and success message -->
                    <h:form>
                        <p style="font-size: 25px; text-align: center;">Create Review</p>
                        <br></br>
                        <p style="font-size: 20px; font-family: georgia !important;">#{bb.book.title}</p>
                        <hr></hr>

                        <!-- The title field limits the amount of characters-->
                        <h:outputLabel for="title" value="Add a Title"/>
                        <br/>
                        <h:inputText id="title" label="Add a Title" value="#{reviewBean.title}" required="true" requiredMessage="Please enter a title" validator="#{reviewBean.validateReviewTitle}">
                            <f:ajax event="blur" render="titleError"/>
                        </h:inputText>
                        <br/>
                        <h:message id="titleError" class="error" for="title"/>

                        <br/>
                        <br/>
                        <!-- Rating out of /5 -->
                        <h:outputLabel for="rating" value="Overall Rating"/>
                        <br/>
                        <h:selectOneMenu id="rating" label="Overall Rating" value="#{reviewBean.ratingChoice}" required="true" >
                            <f:selectItems value="#{reviewBean.ratings}" />
                        </h:selectOneMenu>
                        <h:outputLabel value="/5"/>

                        <!-- Actual review body field -->
                        <br/><br/>
                        <h:outputLabel for="review" value="Add a Review"/>
                        <br/>
                        <h:inputTextarea value="#{reviewBean.reviewBody}" id="review" cols="30" rows="4" validator="#{reviewBean.validateReviewBody}" required="true" requiredMessage="Please enter a review">
                            <f:ajax event="blur" render="reviewError"/>
                        </h:inputTextarea>
                        <br/>
                        <h:message id="reviewError" class="error" for="review"/>
                        <br/><br/>
                        <div>


                            <!-- Button submits review if all input is correct, displays success message and disables submit button so user can no longer submit a review for the same book -->
                            <h:commandButton  value="Submit"  rendered="#{reviewBean.getUserWrittenReviews(UserLoginBean.getClient().clientID,bb.book.isbn) eq 0}" action="#{reviewBean.setCustomerReview(bb.book.isbn,UserLoginBean.getClient().clientID)}">
                                <f:ajax execute="@form" render="@form reviewSection successMsg"/>
                            </h:commandButton>
                            <!--Message shows up after successful review submission-->
                            <h:outputLabel id="successMsg" value="Review Submitted!"  rendered="#{reviewBean.getUserWrittenReviews(UserLoginBean.getClient().clientID,bb.book.isbn) != 0}"/>
                        </div>
                    </h:form>
                </div>
            </div>
        </div>


        <!--Suggestions section-->
        <div class="lightOrangeDiv">

            <!--Suggests books by similar genres if any-->
            <h:panelGroup rendered="#{!empty bb.getSimilarGenreBooks(bb.book,bb.book.authorsCollection)}">
                <p class="small">Similar Genre</p>
            </h:panelGroup>
            <div class="ui four doubling stackable cards">
                <ui:repeat value="#{bb.getSimilarGenreBooks(bb.book,bb.book.authorsCollection)}" var="books">
                    <!--Used composition to display all book cards-->
                    <bookstore:bookCard/>
                </ui:repeat>
            </div>

            <!--Suggests books by similar authors if any-->
            <h:panelGroup rendered="#{!empty bb.getSimilarAuthorBooks(bb.book.authorsCollection,bb.book.isbn)}">
                <br/><br/><br/>
                <ui:repeat value="#{bb.book.authorsCollection}" var="author" >
                    <p class="small">Books by #{author.name}</p>
                </ui:repeat>
            </h:panelGroup>

            <div class="ui four doubling stackable cards">
                <ui:repeat value="#{bb.getSimilarAuthorBooks(bb.book.authorsCollection,bb.book.isbn)}" var="books">
                    <!--Used composition to display all book cards-->
                    <bookstore:bookCard/>
                </ui:repeat>
            </div>
        </div>

        <!--composite component that comes from the footer.xhtml file to avoid coding the website footer in all web pages-->
        <bookstore:footer/>




        <!-- Initialize Swiper -->
        <script>
            var swiper = new Swiper('.swiper-container', {
                loop: true,
                centeredSlides: true,
                autoplay: {
                    delay: 5000,
                    disableOnInteraction: false,
                },
                pagination: {
                    el: '.swiper-pagination',
                },
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
            });
        </script>
    </h:body>
</html>
